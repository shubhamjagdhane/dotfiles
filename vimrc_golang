" General
syntax on;
filetype plugin indent on
set nocp
set mouse-=a
set t_Co=256

set background=dark

" Encoding
set encoding=UTF-8
"Highlight matching search patterns
set hlsearch
" Enable incremental search
set incsearch
" Include matching uppercase words with lowercase search term
set ignorecase
" Include only uppercase words with uppercase saerch term
set smartcase

" Removes highlightness from the searched word(s)
nnoremap <return> :noh<return><esc>

" Code folding
set foldmethod=manual

" my vim config
set relativenumber
set number
set noexpandtab
set tabstop=4
set shiftwidth=4
retab!
set autoindent
set tabstop=4
set shiftwidth=4
set expandtab

" Set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim

" Download plug-ins to the ~/.vim/plugged/ directory
call vundle#begin('~/.vim/plugged')

" Let Vundle manage Vundle
Plugin 'VundleVim/Vundle.vim'

" Syntax highlighter
Plugin 'sheerun/vim-polyglot'

" Auto pair completion
Plugin 'jiangmiao/auto-pairs'

" Nerd tree
Plugin 'preservim/nerdtree'

" Open file tagbar
Plugin 'preservim/tagbar'

" Golang
Plugin 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }
Plugin 'govim/govim'

" FZF
Plugin 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plugin 'junegunn/fzf.vim'

call vundle#end()

" NERDTree configs
let NERDTreeShowBookmarks = 1   " Show the bookmarks table
let NERDTreeShowHidden = 1      " Show hidden files
let NERDTreeShowLineNumbers = 0 " Hide line numbers
let NERDTreeMinimalMenu = 1     " Use the minimal menu (m)
" let NERDTreeWinPos = “left”     " Panel opens on the left side
let NERDTreeWinSize = 31        " Set panel width to 31 columns

" Allowing NERDtree to perform file related operations
set modifiable

" nmap <space>e :NERDTreeToggle %<CR>
" Open nerd tree at the current file or close nerd tree if pressed again.
nnoremap <silent> <expr> <space>e g:NERDTree.IsOpen() ? "\:NERDTreeClose<CR>" : bufexists(expand('%')) ? "\:NERDTreeFind<CR>" : "\:NERDTree<CR>"

" Tagbar config
" Focus the panel when opening it
let g:tagbar_autofocus = 1" Highlight the active tag
let g:tagbar_autoshowtag = 1" Make panel vertical and place on the right
let g:tagbar_position = 'botright vertical'" Mapping to open and close the panel
nmap <F8> :TagbarToggle<CR>

" Finding files
set path+=**

" Display all matching files when we tab complete
set wildmenu

" Create the 'tag' file (may need to install ctags first)
command! Maketags !ctags -R .

" Display file name at the bottom
set laststatus=2

" setting for faith-go vim 
let g:go_def_mode='gopls'
let g:go_info_mode='gopls'
let g:go_gopls_enabled = 1
let g:go_autocomplete_enabled = 1
let g:go_vet_command = 'go vet'
let g:go_addtags_command = 'goimports'
let g:go_autoformat_enable = 1

" Set omnifunc for Go code completion
set omnifunc=go#complete#Complete()

" FZF configuration

" Initialize configuration dictionary
let g:fzf_vim = {}
let g:fzf_vim.preview_window = ['right,50%', 'ctrl-/']

" Open fzf window by pressing space key two times
nnoremap <silent> <space><space> :Files<CR>
nnoremap <silent> <space>g :Rg<CR>

" govim
" Suggestion: show info for completion candidates in a popup menu
if has("patch-8.1.1904")
  set completeopt+=popup
  set completepopup=align:menu,border:off,highlight:Pmenu
endif
